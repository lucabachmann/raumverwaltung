-- MySQL Script generated by MySQL Workbench
-- 04/03/19 10:33:55
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema raumverwaltung
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema raumverwaltung
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `raumverwaltung` DEFAULT CHARACTER SET utf8 ;
USE `raumverwaltung` ;

-- -----------------------------------------------------
-- Table `raumverwaltung`.`raum`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `raumverwaltung`.`raum` (
  `idraum` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `nummer` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idraum`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `raumverwaltung`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `raumverwaltung`.`user` (
  `iduser` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `surname` VARCHAR(45) NOT NULL,
  `username` VARCHAR(45) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`iduser`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `raumverwaltung`.`objektbezeichnung`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `raumverwaltung`.`objektbezeichnung` (
  `idobjektbezeichnung` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idobjektbezeichnung`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `raumverwaltung`.`objekt`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `raumverwaltung`.`objekt` (
  `idobjekt` INT NOT NULL AUTO_INCREMENT,
  `bezeichnungId` INT NOT NULL,
  `raumId` INT NOT NULL,
  PRIMARY KEY (`idobjekt`),
  INDEX `raum_idx` (`raumId` ASC),
  INDEX `bezeichnung_idx` (`bezeichnungId` ASC),
  CONSTRAINT `bezeichnunglol`
    FOREIGN KEY (`bezeichnungId`)
    REFERENCES `raumverwaltung`.`objektbezeichnung` (`idobjektbezeichnung`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `raum`
    FOREIGN KEY (`raumId`)
    REFERENCES `raumverwaltung`.`raum` (`idraum`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `raumverwaltung`.`komponentenBezeichung`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `raumverwaltung`.`komponentenBezeichung` (
  `idkomponentenBezeichung` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idkomponentenBezeichung`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `raumverwaltung`.`komponentenWert`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `raumverwaltung`.`komponentenWert` (
  `idkomponentenWert` INT NOT NULL AUTO_INCREMENT,
  `wert` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idkomponentenWert`),
  UNIQUE INDEX `wert_UNIQUE` (`wert` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `raumverwaltung`.`komponent`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `raumverwaltung`.`komponent` (
  `idkomponent` INT NOT NULL AUTO_INCREMENT,
  `komponentenBezeichnungId` INT NOT NULL,
  `komponentWertId` INT NOT NULL,
  PRIMARY KEY (`idkomponent`),
  INDEX `bezeichnung_idx` (`komponentenBezeichnungId` ASC),
  INDEX `wert_idx` (`komponentWertId` ASC),
  CONSTRAINT `bezeichnung`
    FOREIGN KEY (`komponentenBezeichnungId`)
    REFERENCES `raumverwaltung`.`komponentenBezeichung` (`idkomponentenBezeichung`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `wert`
    FOREIGN KEY (`komponentWertId`)
    REFERENCES `raumverwaltung`.`komponentenWert` (`idkomponentenWert`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `raumverwaltung`.`objektKomponent`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `raumverwaltung`.`objektKomponent` (
  `idobjektKomponent` INT NOT NULL AUTO_INCREMENT,
  `objektId` INT NOT NULL,
  `komponentId` INT NOT NULL,
  PRIMARY KEY (`idobjektKomponent`),
  INDEX `objekt_idx` (`objektId` ASC),
  INDEX `komponent_idx` (`komponentId` ASC),
  CONSTRAINT `objekt`
    FOREIGN KEY (`objektId`)
    REFERENCES `raumverwaltung`.`objekt` (`idobjekt`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `komponent`
    FOREIGN KEY (`komponentId`)
    REFERENCES `raumverwaltung`.`komponent` (`idkomponent`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
